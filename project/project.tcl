#*****************************************************************************************
# Vivado (TM) v2022.1 (64-bit)
#
# project_2.tcl: Tcl script for re-creating project 'project_1'
#
# Generated by Vivado on Thu Jun 15 22:18:01 +0200 2023
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (project_2.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
# 3. The following remote source files that were added to the original project:-
#
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../sources/pmod_audio.v"]"\
 "[file normalize "$origin_dir/../sources/ip/vga_mem/vga_mem.xci"]"\
 "[file normalize "$origin_dir/../sources/alu.v"]"\
 "[file normalize "$origin_dir/../sources/boy.v"]"\
 "[file normalize "$origin_dir/../sources/brom.v"]"\
 "[file normalize "$origin_dir/../sources/clk_div.v"]"\
 "[file normalize "$origin_dir/../sources/clock_div.v"]"\
 "[file normalize "$origin_dir/../sources/common.v"]"\
 "[file normalize "$origin_dir/../sources/control.v"]"\
 "[file normalize "$origin_dir/../sources/cpu.v"]"\
 "[file normalize "$origin_dir/../sources/dma.v"]"\
 "[file normalize "$origin_dir/../sources/ppu.v"]"\
 "[file normalize "$origin_dir/../sources/regfile.v"]"\
 "[file normalize "$origin_dir/../sources/serial.v"]"\
 "[file normalize "$origin_dir/../sources/singleport_ram.v"]"\
 "[file normalize "$origin_dir/../sources/singlereg.v"]"\
 "[file normalize "$origin_dir/../sources/sound.v"]"\
 "[file normalize "$origin_dir/../sources/sound_channel_mix.v"]"\
 "[file normalize "$origin_dir/../sources/sound_length_ctr.v"]"\
 "[file normalize "$origin_dir/../sources/sound_noise.v"]"\
 "[file normalize "$origin_dir/../sources/sound_square.v"]"\
 "[file normalize "$origin_dir/../sources/sound_vol_env.v"]"\
 "[file normalize "$origin_dir/../sources/sound_wave.v"]"\
 "[file normalize "$origin_dir/../sources/timer.v"]"\
 "[file normalize "$origin_dir/../sources/vga_mixer.v"]"\
 "[file normalize "$origin_dir/../sources/vga_timing.v"]"\
 "[file normalize "$origin_dir/../sources/top.v"]"\
 "[file normalize "$origin_dir/../sources/mbc5.v"]"\
 "[file normalize "$origin_dir/../sources/anti_vibration.v"]"\
 "[file normalize "$origin_dir/../sources/vga_font.v"]"\
 "[file normalize "$origin_dir/../sources/ip/Cartridge/Cartridge.xci"]"\
 "[file normalize "$origin_dir/../sources/ip/pll/pll.xci"]"\
 "[file normalize "$origin_dir/../sources/constraints/top.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "project_1"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "project.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/project_1"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xck26-sfvc784-2LV-c

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:kr260_som:part0:1.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "zed" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "22" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "2" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "22" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "22" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "22" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "22" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "22" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]

# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../sources/pmod_audio.v"]\
 [file normalize "${origin_dir}/../sources/ip/vga_mem/vga_mem.xci"]\
 [file normalize "${origin_dir}/../sources/alu.v"]\
 [file normalize "${origin_dir}/../sources/boy.v"]\
 [file normalize "${origin_dir}/../sources/brom.v"]\
 [file normalize "${origin_dir}/../sources/clk_div.v"]\
 [file normalize "${origin_dir}/../sources/clock_div.v" ]\
 [file normalize "${origin_dir}/../sources/common.v"]\
 [file normalize "${origin_dir}/../sources/control.v"]\
 [file normalize "${origin_dir}/../sources/cpu.v"]\
 [file normalize "${origin_dir}/../sources/dma.v"]\
 [file normalize "${origin_dir}/../sources/ppu.v"]\
 [file normalize "${origin_dir}/../sources/regfile.v"]\
 [file normalize "${origin_dir}/../sources/serial.v"]\
 [file normalize "${origin_dir}/../sources/singleport_ram.v"]\
 [file normalize "${origin_dir}/../sources/singlereg.v"]\
 [file normalize "${origin_dir}/../sources/sound.v"]\
 [file normalize "${origin_dir}/../sources/sound_channel_mix.v"]\
 [file normalize "${origin_dir}/../sources/sound_length_ctr.v"]\
 [file normalize "${origin_dir}/../sources/sound_noise.v"]\
 [file normalize "${origin_dir}/../sources/sound_square.v"]\
 [file normalize "${origin_dir}/../sources/sound_vol_env.v"]\
 [file normalize "${origin_dir}/../sources/sound_wave.v"]\
 [file normalize "${origin_dir}/../sources/timer.v"]\
 [file normalize "${origin_dir}/../sources/vga_mixer.v"]\
 [file normalize "${origin_dir}/../sources/vga_timing.v"]\
 [file normalize "${origin_dir}/../sources/top.v"]\
 [file normalize "${origin_dir}/../sources/mbc5.v"]\
 [file normalize "${origin_dir}/../sources/anti_vibration.v"]\
 [file normalize "${origin_dir}/../sources/vga_font.v"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "vga_mem/vga_mem.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../sources/ip/Cartridge/Cartridge.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "Cartridge/Cartridge.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../sources/ip/pll/pll.xci"]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "pll/pll.xci"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj
if { ![get_property "is_locked" $file_obj] } {
  set_property -name "synth_checkpoint_mode" -value "Singular" -objects $file_obj
}


# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/../sources/constraints/top.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constraints/top.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_file" -value "$proj_dir/../sources/top.v" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project

# Set 'utils_1' fileset file properties for remote files
# None


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files pmod_audio.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/pmod_audio.v
}
if { [get_files pmod_audio.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/pmod_audio.v
}
if { [get_files pll.xci] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/ip/pll/pll.xci
}
if { [get_files vga_mem.xci] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/ip/vga_mem/vga_mem.xci
}
if { [get_files alu.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/alu.v
}
if { [get_files boy.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/boy.v
}
if { [get_files brom.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/brom.v
}
if { [get_files clk_div.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/clk_div.v
}
if { [get_files clock_div.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/clock_div.v
}
if { [get_files common.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/common.v
}
if { [get_files control.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/control.v
}
if { [get_files cpu.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/cpu.v
}
if { [get_files dma.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/dma.v
}
if { [get_files ppu.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/ppu.v
}
if { [get_files regfile.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/regfile.v
}
if { [get_files serial.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/serial.v
}
if { [get_files singleport_ram.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/singleport_ram.v
}
if { [get_files singlereg.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/singlereg.v
}
if { [get_files sound.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound.v
}
if { [get_files sound_channel_mix.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound_channel_mix.v
}
if { [get_files sound_length_ctr.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound_length_ctr.v
}
if { [get_files sound_noise.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound_noise.v
}
if { [get_files sound_square.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound_square.v
}
if { [get_files sound_vol_env.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound_vol_env.v
}
if { [get_files sound_wave.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/sound_wave.v
}
if { [get_files timer.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/timer.v
}
if { [get_files vga_mixer.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/vga_mixer.v
}
if { [get_files vga_timing.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/vga_timing.v
}
if { [get_files top.v] == "" } {
  import_files -quiet -fileset sources_1 ${origin_dir}/../sources/../sources/top.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# pmod_audio, pmod_audio, top



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:zynq_ultra_ps_e:3.4\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  pmod_audio\
  pmod_audio\
  top\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set AUDIO_LEFT [ create_bd_port -dir O AUDIO_LEFT ]
  set AUDIO_RIGHT [ create_bd_port -dir O AUDIO_RIGHT ]
  set BLUE [ create_bd_port -dir O -from 7 -to 4 BLUE ]
  set BUTTONS [ create_bd_port -dir I -from 7 -to 0 BUTTONS ]
  set CART_ADDR [ create_bd_port -dir O -from 15 -to 0 CART_ADDR ]
  set CART_CLK [ create_bd_port -dir O CART_CLK ]
  set CART_DATA [ create_bd_port -dir IO -from 7 -to 0 CART_DATA ]
  set CART_RD [ create_bd_port -dir O CART_RD ]
  set CART_RST [ create_bd_port -dir O CART_RST ]
  set CART_SEL [ create_bd_port -dir O CART_SEL ]
  set CART_WR [ create_bd_port -dir O CART_WR ]
  set CLK_IN_gem [ create_bd_port -dir I -type clk -freq_hz 25000000 CLK_IN_gem ]
  set CLOCK_PAC [ create_bd_port -dir O CLOCK_PAC ]
  set GREEN [ create_bd_port -dir O -from 7 -to 4 GREEN ]
  set HSYNC [ create_bd_port -dir O HSYNC ]
  set RED [ create_bd_port -dir O -from 7 -to 4 RED ]
  set RESET [ create_bd_port -dir I RESET ]
  set VSYNC [ create_bd_port -dir O VSYNC ]

  # Create instance: pmod_audio_0, and set properties
  set block_name pmod_audio
  set block_cell_name pmod_audio_0
  if { [catch {set pmod_audio_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmod_audio_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pmod_audio_1, and set properties
  set block_name pmod_audio
  set block_cell_name pmod_audio_1
  if { [catch {set pmod_audio_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pmod_audio_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: top_0, and set properties
  set block_name top
  set block_cell_name top_0
  if { [catch {set top_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $top_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_2

  # Create instance: zynq_ultra_ps_e_0, and set properties
  set zynq_ultra_ps_e_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:zynq_ultra_ps_e:3.4 zynq_ultra_ps_e_0 ]
  set_property -dict [ list \
   CONFIG.PSU_DDR_RAM_HIGHADDR {0x7FFFFFFF} \
   CONFIG.PSU_DDR_RAM_HIGHADDR_OFFSET {0x00000002} \
   CONFIG.PSU_DDR_RAM_LOWADDR_OFFSET {0x80000000} \
   CONFIG.PSU__ACT_DDR_FREQ_MHZ {799.992004} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__ACT_FREQMHZ {1333.320068} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FBDIV {80} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__APLL_TO_LPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__ACT_FREQMHZ {399.996002} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__ACT_FREQMHZ {599.994019} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FBDIV {72} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__DPLL_TO_LPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR0 {63} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR1 {10} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__ACT_FREQMHZ {599.994019} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__ACT_FREQMHZ {599.994019} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__ACT_FREQMHZ {533.328003} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FBDIV {64} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__VPLL_TO_LPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__ACT_FREQMHZ {533.328003} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__ACT_FREQMHZ {49.999500} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR0 {20} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__ACT_FREQMHZ {533.328003} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__ACT_FREQMHZ {999.989990} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FBDIV {60} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRL_APB__IOPLL_TO_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__ACT_FREQMHZ {266.664001} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__DIVISOR0 {10} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__ACT_FREQMHZ {533.328003} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__ACT_FREQMHZ {199.998001} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR0 {11} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FBDIV {64} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRL_APB__RPLL_TO_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__ACT_FREQMHZ {33.333000} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR1 {15} \
   CONFIG.PSU__DDR_HIGH_ADDRESS_GUI_ENABLE {0} \
   CONFIG.PSU__FPGA_PL0_ENABLE {0} \
   CONFIG.PSU__HIGH_ADDRESS__ENABLE {0} \
   CONFIG.PSU__MAXIGP2__DATA_WIDTH {32} \
   CONFIG.PSU__PL_CLK0_BUF {FALSE} \
   CONFIG.PSU__PROTECTION__MASTERS {\
USB1:NonSecure;0|USB0:NonSecure;0|S_AXI_LPD:NA;0|S_AXI_HPC1_FPD:NA;0|S_AXI_HPC0_FPD:NA;0|S_AXI_HP3_FPD:NA;0|S_AXI_HP2_FPD:NA;0|S_AXI_HP1_FPD:NA;0|S_AXI_HP0_FPD:NA;0|S_AXI_ACP:NA;0|S_AXI_ACE:NA;0|SD1:NonSecure;0|SD0:NonSecure;0|SATA1:NonSecure;0|SATA0:NonSecure;0|RPU1:Secure;1|RPU0:Secure;1|QSPI:NonSecure;0|PMU:NA;1|PCIe:NonSecure;0|NAND:NonSecure;0|LDMA:NonSecure;1|GPU:NonSecure;1|GEM3:NonSecure;0|GEM2:NonSecure;0|GEM1:NonSecure;0|GEM0:NonSecure;0|FDMA:NonSecure;1|DP:NonSecure;0|DAP:NA;1|Coresight:NA;1|CSU:NA;1|APU:NA;1} \
   CONFIG.PSU__PROTECTION__SLAVES {\
LPD;USB3_1_XHCI;FE300000;FE3FFFFF;0|LPD;USB3_1;FF9E0000;FF9EFFFF;0|LPD;USB3_0_XHCI;FE200000;FE2FFFFF;0|LPD;USB3_0;FF9D0000;FF9DFFFF;0|LPD;UART1;FF010000;FF01FFFF;0|LPD;UART0;FF000000;FF00FFFF;0|LPD;TTC3;FF140000;FF14FFFF;0|LPD;TTC2;FF130000;FF13FFFF;0|LPD;TTC1;FF120000;FF12FFFF;0|LPD;TTC0;FF110000;FF11FFFF;0|FPD;SWDT1;FD4D0000;FD4DFFFF;0|LPD;SWDT0;FF150000;FF15FFFF;0|LPD;SPI1;FF050000;FF05FFFF;0|LPD;SPI0;FF040000;FF04FFFF;0|FPD;SMMU_REG;FD5F0000;FD5FFFFF;1|FPD;SMMU;FD800000;FDFFFFFF;1|FPD;SIOU;FD3D0000;FD3DFFFF;1|FPD;SERDES;FD400000;FD47FFFF;1|LPD;SD1;FF170000;FF17FFFF;0|LPD;SD0;FF160000;FF16FFFF;0|FPD;SATA;FD0C0000;FD0CFFFF;0|LPD;RTC;FFA60000;FFA6FFFF;1|LPD;RSA_CORE;FFCE0000;FFCEFFFF;1|LPD;RPU;FF9A0000;FF9AFFFF;1|LPD;R5_TCM_RAM_GLOBAL;FFE00000;FFE3FFFF;1|LPD;R5_1_Instruction_Cache;FFEC0000;FFECFFFF;1|LPD;R5_1_Data_Cache;FFED0000;FFEDFFFF;1|LPD;R5_1_BTCM_GLOBAL;FFEB0000;FFEBFFFF;1|LPD;R5_1_ATCM_GLOBAL;FFE90000;FFE9FFFF;1|LPD;R5_0_Instruction_Cache;FFE40000;FFE4FFFF;1|LPD;R5_0_Data_Cache;FFE50000;FFE5FFFF;1|LPD;R5_0_BTCM_GLOBAL;FFE20000;FFE2FFFF;1|LPD;R5_0_ATCM_GLOBAL;FFE00000;FFE0FFFF;1|LPD;QSPI_Linear_Address;C0000000;DFFFFFFF;1|LPD;QSPI;FF0F0000;FF0FFFFF;0|LPD;PMU_RAM;FFDC0000;FFDDFFFF;1|LPD;PMU_GLOBAL;FFD80000;FFDBFFFF;1|FPD;PCIE_MAIN;FD0E0000;FD0EFFFF;0|FPD;PCIE_LOW;E0000000;EFFFFFFF;0|FPD;PCIE_HIGH2;8000000000;BFFFFFFFFF;0|FPD;PCIE_HIGH1;600000000;7FFFFFFFF;0|FPD;PCIE_DMA;FD0F0000;FD0FFFFF;0|FPD;PCIE_ATTRIB;FD480000;FD48FFFF;0|LPD;OCM_XMPU_CFG;FFA70000;FFA7FFFF;1|LPD;OCM_SLCR;FF960000;FF96FFFF;1|OCM;OCM;FFFC0000;FFFFFFFF;1|LPD;NAND;FF100000;FF10FFFF;0|LPD;MBISTJTAG;FFCF0000;FFCFFFFF;1|LPD;LPD_XPPU_SINK;FF9C0000;FF9CFFFF;1|LPD;LPD_XPPU;FF980000;FF98FFFF;1|LPD;LPD_SLCR_SECURE;FF4B0000;FF4DFFFF;1|LPD;LPD_SLCR;FF410000;FF4AFFFF;1|LPD;LPD_GPV;FE100000;FE1FFFFF;1|LPD;LPD_DMA_7;FFAF0000;FFAFFFFF;1|LPD;LPD_DMA_6;FFAE0000;FFAEFFFF;1|LPD;LPD_DMA_5;FFAD0000;FFADFFFF;1|LPD;LPD_DMA_4;FFAC0000;FFACFFFF;1|LPD;LPD_DMA_3;FFAB0000;FFABFFFF;1|LPD;LPD_DMA_2;FFAA0000;FFAAFFFF;1|LPD;LPD_DMA_1;FFA90000;FFA9FFFF;1|LPD;LPD_DMA_0;FFA80000;FFA8FFFF;1|LPD;IPI_CTRL;FF380000;FF3FFFFF;1|LPD;IOU_SLCR;FF180000;FF23FFFF;1|LPD;IOU_SECURE_SLCR;FF240000;FF24FFFF;1|LPD;IOU_SCNTRS;FF260000;FF26FFFF;1|LPD;IOU_SCNTR;FF250000;FF25FFFF;1|LPD;IOU_GPV;FE000000;FE0FFFFF;1|LPD;I2C1;FF030000;FF03FFFF;0|LPD;I2C0;FF020000;FF02FFFF;0|FPD;GPU;FD4B0000;FD4BFFFF;1|LPD;GPIO;FF0A0000;FF0AFFFF;1|LPD;GEM3;FF0E0000;FF0EFFFF;0|LPD;GEM2;FF0D0000;FF0DFFFF;0|LPD;GEM1;FF0C0000;FF0CFFFF;0|LPD;GEM0;FF0B0000;FF0BFFFF;0|FPD;FPD_XMPU_SINK;FD4F0000;FD4FFFFF;1|FPD;FPD_XMPU_CFG;FD5D0000;FD5DFFFF;1|FPD;FPD_SLCR_SECURE;FD690000;FD6CFFFF;1|FPD;FPD_SLCR;FD610000;FD68FFFF;1|FPD;FPD_DMA_CH7;FD570000;FD57FFFF;1|FPD;FPD_DMA_CH6;FD560000;FD56FFFF;1|FPD;FPD_DMA_CH5;FD550000;FD55FFFF;1|FPD;FPD_DMA_CH4;FD540000;FD54FFFF;1|FPD;FPD_DMA_CH3;FD530000;FD53FFFF;1|FPD;FPD_DMA_CH2;FD520000;FD52FFFF;1|FPD;FPD_DMA_CH1;FD510000;FD51FFFF;1|FPD;FPD_DMA_CH0;FD500000;FD50FFFF;1|LPD;EFUSE;FFCC0000;FFCCFFFF;1|FPD;Display\
Port;FD4A0000;FD4AFFFF;0|FPD;DPDMA;FD4C0000;FD4CFFFF;0|FPD;DDR_XMPU5_CFG;FD050000;FD05FFFF;1|FPD;DDR_XMPU4_CFG;FD040000;FD04FFFF;1|FPD;DDR_XMPU3_CFG;FD030000;FD03FFFF;1|FPD;DDR_XMPU2_CFG;FD020000;FD02FFFF;1|FPD;DDR_XMPU1_CFG;FD010000;FD01FFFF;1|FPD;DDR_XMPU0_CFG;FD000000;FD00FFFF;1|FPD;DDR_QOS_CTRL;FD090000;FD09FFFF;1|FPD;DDR_PHY;FD080000;FD08FFFF;1|DDR;DDR_LOW;0;7FFFFFFF;1|DDR;DDR_HIGH;800000000;800000000;0|FPD;DDDR_CTRL;FD070000;FD070FFF;1|LPD;Coresight;FE800000;FEFFFFFF;1|LPD;CSU_DMA;FFC80000;FFC9FFFF;1|LPD;CSU;FFCA0000;FFCAFFFF;1|LPD;CRL_APB;FF5E0000;FF85FFFF;1|FPD;CRF_APB;FD1A0000;FD2DFFFF;1|FPD;CCI_REG;FD5E0000;FD5EFFFF;1|LPD;CAN1;FF070000;FF07FFFF;0|LPD;CAN0;FF060000;FF06FFFF;0|FPD;APU;FD5C0000;FD5CFFFF;1|LPD;APM_INTC_IOU;FFA20000;FFA2FFFF;1|LPD;APM_FPD_LPD;FFA30000;FFA3FFFF;1|FPD;APM_5;FD490000;FD49FFFF;1|FPD;APM_0;FD0B0000;FD0BFFFF;1|LPD;APM2;FFA10000;FFA1FFFF;1|LPD;APM1;FFA00000;FFA0FFFF;1|LPD;AMS;FFA50000;FFA5FFFF;1|FPD;AFI_5;FD3B0000;FD3BFFFF;1|FPD;AFI_4;FD3A0000;FD3AFFFF;1|FPD;AFI_3;FD390000;FD39FFFF;1|FPD;AFI_2;FD380000;FD38FFFF;1|FPD;AFI_1;FD370000;FD37FFFF;1|FPD;AFI_0;FD360000;FD36FFFF;1|LPD;AFIFM6;FF9B0000;FF9BFFFF;1|FPD;ACPU_GIC;F9010000;F907FFFF;1} \
   CONFIG.PSU__USE__M_AXI_GP2 {0} \
 ] $zynq_ultra_ps_e_0

  # Create port connections
  connect_bd_net -net BUTTONS_1 [get_bd_ports BUTTONS] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net CLK_IN_gem_1 [get_bd_ports CLK_IN_gem] [get_bd_pins top_0/CLK_100MHZ_FPGA]
  connect_bd_net -net Net [get_bd_ports CART_DATA] [get_bd_pins top_0/cartridge_data]
  connect_bd_net -net RESET_1 [get_bd_ports RESET] [get_bd_pins top_0/ext_reset]
  connect_bd_net -net pmod_audio_0_output_pmod [get_bd_ports AUDIO_LEFT] [get_bd_pins pmod_audio_0/output_pmod]
  connect_bd_net -net pmod_audio_1_output_pmod [get_bd_ports AUDIO_RIGHT] [get_bd_pins pmod_audio_1/output_pmod]
  connect_bd_net -net top_0_audio_left [get_bd_pins pmod_audio_0/sample] [get_bd_pins top_0/audio_left]
  connect_bd_net -net top_0_audio_right [get_bd_pins pmod_audio_1/sample] [get_bd_pins top_0/audio_right]
  connect_bd_net -net top_0_cartridge_addr [get_bd_ports CART_ADDR] [get_bd_pins top_0/cartridge_addr]
  connect_bd_net -net top_0_cartridge_clk [get_bd_ports CART_CLK] [get_bd_pins top_0/cartridge_clk]
  connect_bd_net -net top_0_cartridge_rd [get_bd_ports CART_RD] [get_bd_pins top_0/cartridge_rd]
  connect_bd_net -net top_0_cartridge_rst [get_bd_ports CART_RST] [get_bd_pins top_0/cartridge_rst]
  connect_bd_net -net top_0_cartridge_sel [get_bd_ports CART_SEL] [get_bd_pins top_0/cartridge_sel]
  connect_bd_net -net top_0_cartridge_wr [get_bd_ports CART_WR] [get_bd_pins top_0/cartridge_wr]
  connect_bd_net -net top_0_clk_gb [get_bd_pins pmod_audio_0/clk] [get_bd_pins pmod_audio_1/clk] [get_bd_pins top_0/clk_gb]
  connect_bd_net -net top_0_vga_b [get_bd_ports BLUE] [get_bd_pins top_0/vga_b]
  connect_bd_net -net top_0_vga_g [get_bd_ports GREEN] [get_bd_pins top_0/vga_g]
  connect_bd_net -net top_0_vga_hs [get_bd_ports HSYNC] [get_bd_pins top_0/vga_hs]
  connect_bd_net -net top_0_vga_r [get_bd_ports RED] [get_bd_pins top_0/vga_r]
  connect_bd_net -net top_0_vga_vs [get_bd_ports VSYNC] [get_bd_pins top_0/vga_vs]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins top_0/buttons] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconstant_2_dout [get_bd_pins top_0/color_gb] [get_bd_pins xlconstant_2/dout]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_resetn0 [get_bd_ports CLOCK_PAC] [get_bd_pins zynq_ultra_ps_e_0/pl_resetn0]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.74375",
   "Default View_TopLeft":"-200,0",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port port-id_AUDIO_LEFT -pg 1 -lvl 4 -x 1220 -y 70 -defaultsOSRD
preplace port port-id_AUDIO_RIGHT -pg 1 -lvl 4 -x 1220 -y 290 -defaultsOSRD
preplace port port-id_CLK_IN_gem -pg 1 -lvl 0 -x 0 -y 250 -defaultsOSRD
preplace port port-id_HSYNC -pg 1 -lvl 4 -x 1220 -y 160 -defaultsOSRD
preplace port port-id_VSYNC -pg 1 -lvl 4 -x 1220 -y 220 -defaultsOSRD
preplace port port-id_CLOCK_PAC -pg 1 -lvl 4 -x 1220 -y 550 -defaultsOSRD
preplace port port-id_CART_WR -pg 1 -lvl 4 -x 1220 -y 380 -defaultsOSRD
preplace port port-id_CART_RD -pg 1 -lvl 4 -x 1220 -y 400 -defaultsOSRD
preplace port port-id_CART_CLK -pg 1 -lvl 4 -x 1220 -y 440 -defaultsOSRD
preplace port port-id_CART_RST -pg 1 -lvl 4 -x 1220 -y 420 -defaultsOSRD
preplace port port-id_CART_SEL -pg 1 -lvl 4 -x 1220 -y 460 -defaultsOSRD
preplace port port-id_RESET -pg 1 -lvl 0 -x 0 -y 150 -defaultsOSRD
preplace portBus BLUE -pg 1 -lvl 4 -x 1220 -y 240 -defaultsOSRD
preplace portBus GREEN -pg 1 -lvl 4 -x 1220 -y 180 -defaultsOSRD
preplace portBus RED -pg 1 -lvl 4 -x 1220 -y 200 -defaultsOSRD
preplace portBus BUTTONS -pg 1 -lvl 0 -x 0 -y 310 -defaultsOSRD
preplace portBus CART_ADDR -pg 1 -lvl 4 -x 1220 -y 340 -defaultsOSRD
preplace portBus CART_DATA -pg 1 -lvl 4 -x 1220 -y 360 -defaultsOSRD
preplace inst pmod_audio_0 -pg 1 -lvl 3 -x 970 -y 70 -defaultsOSRD
preplace inst pmod_audio_1 -pg 1 -lvl 3 -x 970 -y 290 -defaultsOSRD
preplace inst xlconstant_2 -pg 1 -lvl 1 -x 170 -y 410 -defaultsOSRD
preplace inst util_vector_logic_0 -pg 1 -lvl 1 -x 170 -y 310 -defaultsOSRD
preplace inst zynq_ultra_ps_e_0 -pg 1 -lvl 3 -x 970 -y 550 -defaultsOSRD
preplace inst top_0 -pg 1 -lvl 2 -x 510 -y 310 -defaultsOSRD
preplace netloc BUTTONS_1 1 0 1 NJ 310
preplace netloc CLK_IN_gem_1 1 0 2 NJ 250 320J
preplace netloc Net 1 2 2 690J 360 NJ
preplace netloc RESET_1 1 0 2 NJ 150 330
preplace netloc pmod_audio_0_output_pmod 1 3 1 NJ 70
preplace netloc pmod_audio_1_output_pmod 1 3 1 NJ 290
preplace netloc top_0_audio_left 1 2 1 690 80n
preplace netloc top_0_audio_right 1 2 1 710 300n
preplace netloc top_0_cartridge_addr 1 2 2 720J 370 1200J
preplace netloc top_0_cartridge_clk 1 2 2 NJ 430 1190J
preplace netloc top_0_cartridge_rd 1 2 2 710J 400 NJ
preplace netloc top_0_cartridge_rst 1 2 2 700J 420 NJ
preplace netloc top_0_cartridge_sel 1 2 2 NJ 450 1200J
preplace netloc top_0_cartridge_wr 1 2 2 690J 380 NJ
preplace netloc top_0_clk_gb 1 2 1 730 60n
preplace netloc top_0_vga_b 1 2 2 720J 220 1190J
preplace netloc top_0_vga_g 1 2 2 700J 180 NJ
preplace netloc top_0_vga_hs 1 2 2 680J 160 NJ
preplace netloc top_0_vga_r 1 2 2 710J 200 NJ
preplace netloc top_0_vga_vs 1 2 2 720J 210 1200J
preplace netloc util_vector_logic_0_Res 1 1 1 330J 310n
preplace netloc xlconstant_2_dout 1 1 1 320J 340n
preplace netloc zynq_ultra_ps_e_0_pl_resetn0 1 3 1 NJ 550
levelinfo -pg 1 0 170 510 970 1220
pagesize -pg 1 -db -bbox -sgen -140 -20 1380 640
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property EXCLUDE_DEBUG_LOGIC "0" [get_files design_1.bd ] 
set_property GENERATE_SYNTH_CHECKPOINT "1" [get_files design_1.bd ] 
set_property IS_ENABLED "1" [get_files design_1.bd ] 
set_property IS_GLOBAL_INCLUDE "0" [get_files design_1.bd ] 
set_property LIBRARY "xil_defaultlib" [get_files design_1.bd ] 
set_property PATH_MODE "RelativeFirst" [get_files design_1.bd ] 
set_property PFM_NAME "" [get_files design_1.bd ] 
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 
set_property USED_IN "synthesis implementation simulation" [get_files design_1.bd ] 
set_property USED_IN_IMPLEMENTATION "1" [get_files design_1.bd ] 
set_property USED_IN_SIMULATION "1" [get_files design_1.bd ] 
set_property USED_IN_SYNTHESIS "1" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files

set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
add_files -norecurse -fileset sources_1 $wrapper_path

puts "
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	  !!!                                                                  !!!
      !!! remember to add to 'design_1_wrapper.v' : `default_nettype wire  !!!
      !!! then generate output product of 'design_1' as 'Global'           !!!
      !!!                                                                  !!!
      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!";
